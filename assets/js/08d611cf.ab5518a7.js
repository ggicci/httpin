"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[313],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,k=u["".concat(l,".").concat(m)]||u[m]||s[m]||i;return n?r.createElement(k,o(o({ref:t},d),{},{components:n})):r.createElement(k,o({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4545:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return s}});var r=n(3117),a=n(102),i=(n(7294),n(3905)),o=["components"],p={sidebar_position:1},l="Concepts",c={unversionedId:"advanced/concepts",id:"advanced/concepts",title:"Concepts",description:"httpin is driven by defining Go struct tags.",source:"@site/docs/advanced/concepts.md",sourceDirName:"advanced",slug:"/advanced/concepts",permalink:"/httpin/advanced/concepts",draft:!1,editUrl:"https://github.com/ggicci/httpin/edit/documentation/docs/docs/advanced/concepts.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"go-restful",permalink:"/httpin/integrations/go-restful"},next:{title:"Error Handler",permalink:"/httpin/advanced/error-handler"}},d={},s=[{value:"Directive",id:"directive",level:2},{value:"Directive Executor",id:"directive-executor",level:2}],u={toc:s};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"concepts"},"Concepts"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"httpin")," is driven by defining Go struct tags."),(0,i.kt)("p",null,"Let's take the following decleartion of a struct as an example to explain how it works:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'type Authorization struct {\n    Token string `in:"query=access_token,token;header=x-api-token;required"`\n                      ^----------------------^ ^----------------^ ^------^\n                                d1                    d2            d3\n}\n')),(0,i.kt)("p",null,"The key of the struct tag to drive ",(0,i.kt)("strong",{parentName:"p"},"httpin")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"in"),". Which is specific for the ",(0,i.kt)("strong",{parentName:"p"},"httpin")," package, like ",(0,i.kt)("inlineCode",{parentName:"p"},"json")," for ",(0,i.kt)("strong",{parentName:"p"},"encoding/json"),"."),(0,i.kt)("p",null,"We can define multiple ",(0,i.kt)("a",{parentName:"p",href:"#directive"},"directives")," in the tag, which must be ",(0,i.kt)("strong",{parentName:"p"},"separated by semicolons (",(0,i.kt)("inlineCode",{parentName:"strong"},";"),")"),". See the example above, ",(0,i.kt)("inlineCode",{parentName:"p"},"d1"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"d2"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"d3")," are three different directives.\n",(0,i.kt)("strong",{parentName:"p"},"httpin")," will run the directives in order (",(0,i.kt)("inlineCode",{parentName:"p"},"d1")," -> ",(0,i.kt)("inlineCode",{parentName:"p"},"d2")," -> ",(0,i.kt)("inlineCode",{parentName:"p"},"d3"),") for each corresponding struct field."),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Not every directive will be executed by ",(0,i.kt)("strong",{parentName:"p"},"httpin"),". It's decided by the executors (algorithms) of the directives and the actual input (request data)."),(0,i.kt)("p",{parentName:"div"},"The execution of a directive can fail, if a former directive failed, the latter ones won't be executed. If ",(0,i.kt)("inlineCode",{parentName:"p"},"d1")," failed, ",(0,i.kt)("inlineCode",{parentName:"p"},"d2"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"d3")," won't run."))),(0,i.kt)("h2",{id:"directive"},"Directive"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Directive")," is a formatted string consisting of two parts, the ",(0,i.kt)("a",{parentName:"p",href:"#directive-executor"},"directive executor"),", and the arguments, ",(0,i.kt)("strong",{parentName:"p"},"separated by an equal sign (",(0,i.kt)("inlineCode",{parentName:"strong"},"="),")"),", formatted as:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"name=argv\n")),(0,i.kt)("p",null,"Which works like a function call."),(0,i.kt)("p",null,"The left to the ",(0,i.kt)("inlineCode",{parentName:"p"},"=")," is the name of the directive. There's a corresponding directive executor (with the same name) working underhood."),(0,i.kt)("p",null,"The right to the ",(0,i.kt)("inlineCode",{parentName:"p"},"=")," is the arguments, which will be passed to the algorithm at runtime. The way to define arguments can differ across different directives. In general, it will be a comma (",(0,i.kt)("inlineCode",{parentName:"p"},","),") separated strings for multiple arguments. Arguments can be ommited. For more specific usage, you should consult the documentation of the directives."),(0,i.kt)("p",null,"For the above example, there are three directives:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"d1: ",(0,i.kt)("inlineCode",{parentName:"li"},"query=access_token,token")),(0,i.kt)("li",{parentName:"ul"},"d2: ",(0,i.kt)("inlineCode",{parentName:"li"},"header=x-api-token")),(0,i.kt)("li",{parentName:"ul"},"d3: ",(0,i.kt)("inlineCode",{parentName:"li"},"required"))),(0,i.kt)("p",null,"Let's dissect ",(0,i.kt)("inlineCode",{parentName:"p"},"d1"),", i.e. ",(0,i.kt)("inlineCode",{parentName:"p"},"query=access_token,token"),". The ",(0,i.kt)("strong",{parentName:"p"},"name")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"query"),". The ",(0,i.kt)("strong",{parentName:"p"},"argv")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"access_token,token"),". And after reading the documentation of ",(0,i.kt)("a",{parentName:"p",href:"/directives/query"},(0,i.kt)("strong",{parentName:"a"},"query")),", we know the args will be treated as ",(0,i.kt)("inlineCode",{parentName:"p"},'["access_token", "token"]'),"."),(0,i.kt)("h2",{id:"directive-executor"},"Directive Executor"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Directive Executor")," is an algorithm with runtime context who's responsible to execute a concrete ",(0,i.kt)("a",{parentName:"p",href:"#directive"},(0,i.kt)("strong",{parentName:"a"},"directive")),"."),(0,i.kt)("p",null,"To give a better understanding, we can treat ",(0,i.kt)("inlineCode",{parentName:"p"},"Directive Executor")," as a function in a programming lanaguage, and treat ",(0,i.kt)("inlineCode",{parentName:"p"},"Directive")," as a concrete function call."),(0,i.kt)("p",null,"e.g."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Diretive Executor"),(0,i.kt)("th",{parentName:"tr",align:null},"Directive"),(0,i.kt)("th",{parentName:"tr",align:null},"Execution"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"query"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"query=access_token,token")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'query(["access_token", "token"])'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"header"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"header=x-api-token,Authorization")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'header(["x-api-token", "Authorization"])'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"required"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"required")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"required([])"))))))}m.isMDXComponent=!0}}]);
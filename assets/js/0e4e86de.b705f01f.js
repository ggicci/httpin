"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[831],{5333:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var i=r(7462),n=(r(7294),r(3905));const o={sidebar_position:100},c="Create Your Own \ud83d\udd0c",a={unversionedId:"directives/custom",id:"directives/custom",title:"Create Your Own \ud83d\udd0c",description:"You can extend httpin by adding your custom directives.",source:"@site/docs/directives/custom.mdx",sourceDirName:"directives",slug:"/directives/custom",permalink:"/httpin/directives/custom",draft:!1,editUrl:"https://github.com/ggicci/httpin/edit/documentation/docs/docs/directives/custom.mdx",tags:[],version:"current",sidebarPosition:100,frontMatter:{sidebar_position:100},sidebar:"docsSidebar",previous:{title:"decoder",permalink:"/httpin/directives/decoder"},next:{title:"net/http",permalink:"/httpin/integrations/http"}},s={},u=[{value:"1. Create a Directive Executor",id:"1-create-a-directive-executor",level:2},{value:"2. Register your Directive to httpin",id:"2-register-your-directive-to-httpin",level:2},{value:"3. Use your Directive",id:"3-use-your-directive",level:2}],d={toc:u},p="wrapper";function l(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,i.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"create-your-own-"},"Create Your Own \ud83d\udd0c"),(0,n.kt)("p",null,"You can extend ",(0,n.kt)("strong",{parentName:"p"},"httpin")," by adding your custom directives."),(0,n.kt)("p",null,"Firstly you should understand the concepts of ",(0,n.kt)("a",{parentName:"p",href:"/advanced/concepts#directive"},(0,n.kt)("strong",{parentName:"a"},"Directive"))," and ",(0,n.kt)("a",{parentName:"p",href:"/advanced/concepts#directive-executor"},(0,n.kt)("strong",{parentName:"a"},"Directive Executor")),"."),(0,n.kt)("p",null,"To add your custom directive, you need to:"),(0,n.kt)("h2",{id:"1-create-a-directive-executor"},"1. Create a Directive Executor"),(0,n.kt)("p",null,"by implementing the ",(0,n.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/ggicci/httpin#DirectiveExecutor"},(0,n.kt)("inlineCode",{parentName:"a"},"httpin.DirectiveExecutor"))," interface:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"{13}","{13}":!0},'func toLower(rtm *DirectiveRuntime) error {\n    if rtm.Value.Type().Elem().Kind() != reflect.String {\n        return errors.New("not a string")\n    }\n\n    currentValue := rtm.Value.Elem().String()\n    newValue := strings.ToLower(currentValue)\n    rtm.Value.Elem().SetString(newValue)\n    return nil\n}\n\n// Adapt to the httpin.DirectiveExecutor interface.\nvar MyLowercaseDirectiveExecutor = httpin.DirectiveExecutorFunc(toLower)\n')),(0,n.kt)("h2",{id:"2-register-your-directive-to-httpin"},"2. Register your Directive to httpin"),(0,n.kt)("p",null,"by calling ",(0,n.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/ggicci/httpin#RegisterDirectiveExecutor"},(0,n.kt)("inlineCode",{parentName:"a"},"httpin.RegisterDirectiveExecutor")),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"{2}","{2}":!0},'func init() {\n    httpin.RegisterDirectiveExecutor("to_lowercase", MyLowercaseDirectiveExecutor)\n}\n')),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"NB"),": make sure to register your directive executor before you start the server."),(0,n.kt)("h2",{id:"3-use-your-directive"},"3. Use your Directive"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"{2}","{2}":!0},'type LoginFormInput struct {\n    Login string `in:"form=login;required;to_lowercase"`\n    Pass  string `in:"form=login;required"`\n}\n')))}l.isMDXComponent=!0}}]);
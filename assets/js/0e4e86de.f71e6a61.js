"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[831],{7332:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>a,toc:()=>l});var n=r(5893),i=r(1151),s=r(2332);const c={sidebar_position:100},o="Custom \ud83d\udd0c",a={id:"directives/custom",title:"Custom \ud83d\udd0c",description:"You can extend httpin by adding your custom directives.",source:"@site/docs/directives/custom.mdx",sourceDirName:"directives",slug:"/directives/custom",permalink:"/httpin/directives/custom",draft:!1,unlisted:!1,editUrl:"https://github.com/ggicci/httpin/edit/documentation/docs/docs/directives/custom.mdx",tags:[],version:"current",sidebarPosition:100,frontMatter:{sidebar_position:100},sidebar:"docsSidebar",previous:{title:"coder",permalink:"/httpin/directives/coder"},next:{title:"net/http",permalink:"/httpin/integrations/http"}},u={},l=[{value:"Steps",id:"steps",level:2},{value:"1. Create a Directive Executor",id:"1-create-a-directive-executor",level:3},{value:"2. Register your Directive to httpin",id:"2-register-your-directive-to-httpin",level:3},{value:"3. Use your Directive",id:"3-use-your-directive",level:3},{value:"Runable Example",id:"runable-example",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"custom-",children:"Custom \ud83d\udd0c"}),"\n",(0,n.jsxs)(t.p,{children:["You can extend ",(0,n.jsx)(t.strong,{children:"httpin"})," by adding your custom directives."]}),"\n",(0,n.jsxs)(t.p,{children:["Firstly you should understand the concepts of ",(0,n.jsx)(t.a,{href:"/advanced/concepts#directive",children:(0,n.jsx)(t.strong,{children:"Directive"})})," and ",(0,n.jsx)(t.a,{href:"/advanced/concepts#directive-executor",children:(0,n.jsx)(t.strong,{children:"Directive Executor"})}),"."]}),"\n",(0,n.jsx)(t.p,{children:"To add your custom directive, you need to:"}),"\n",(0,n.jsx)(t.h2,{id:"steps",children:"Steps"}),"\n",(0,n.jsx)(t.h3,{id:"1-create-a-directive-executor",children:"1. Create a Directive Executor"}),"\n",(0,n.jsxs)(t.p,{children:["by implementing the ",(0,n.jsx)(t.a,{href:"https://pkg.go.dev/github.com/ggicci/httpin/core#DirectiveExecutor",children:(0,n.jsx)(t.code,{children:"httpin_core.DirectiveExecutor"})})," interface:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-go",metastring:"{13}",children:'type DirectiveCaseFormatter struct {\n\tTransform func(string) string\n}\n\nfunc (f *DirectiveCaseFormatter) Decode(rtm *httpin_core.DirectiveRuntime) error {\n\tif rtm.Value.Type().Elem().Kind() != reflect.String {\n\t\treturn errors.New("not a string")\n\t}\n\n\tcurrentValue := rtm.Value.Elem().String()\n\tnewValue := f.Transform(currentValue)\n\trtm.Value.Elem().SetString(newValue)\n\treturn nil\n}\n\nfunc (f *DirectiveCaseFormatter) Encode(rtm *httpin_core.DirectiveRuntime) error {\n\tif rtm.Value.Type().Kind() != reflect.String {\n\t\treturn errors.New("not a string")\n\t}\n\n\tcurrentValue := rtm.Value.String()\n\tnewValue := f.Transform(currentValue)\n\trtm.Value.SetString(newValue)\n\treturn nil\n}\n'})}),"\n",(0,n.jsx)(t.h3,{id:"2-register-your-directive-to-httpin",children:"2. Register your Directive to httpin"}),"\n",(0,n.jsxs)(t.p,{children:["by calling ",(0,n.jsx)(t.a,{href:"https://pkg.go.dev/github.com/ggicci/httpin/core#RegisterDirective",children:(0,n.jsx)(t.code,{children:"httpin_core.RegisterDirective"})}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-go",metastring:"{2}",children:'func init() {\n\thttpin_core.RegisterDirective("to_lowercase", DirectiveCaseFormatter{\n\t\tTransform: strings.ToLower,\n\t})\n\n\thttpin_core.RegisterDirective("to_uppercase", DirectiveCaseFormatter{\n\t\tTransform: strings.ToUpper,\n\t})\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"NB"}),": make sure to register your directive executor before you start the server."]}),"\n",(0,n.jsx)(t.h3,{id:"3-use-your-directive",children:"3. Use your Directive"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-go",metastring:"{2,3}",children:'type ListUsersInput struct {\n\tUsername string `in:"query=username;to_lowercase"`\n\tGender   string `in:"query=gender;to_uppercase"`\n}\n'})}),"\n",(0,n.jsx)(t.h2,{id:"runable-example",children:"Runable Example"}),"\n",(0,n.jsx)(s.Z,{children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n\t"errors"\n\t"fmt"\n\t"net/http"\n\t"net/http/httptest"\n\t"reflect"\n\t"strings"\n\n\t"github.com/ggicci/httpin"\n\thttpin_core "github.com/ggicci/httpin/core"\n\t"github.com/go-chi/chi/v5"\n)\n\ntype DirectiveCaseFormatter struct {\n\tTransform func(string) string\n}\n\nfunc (f *DirectiveCaseFormatter) Decode(rtm *httpin_core.DirectiveRuntime) error {\n\tif rtm.Value.Type().Elem().Kind() != reflect.String {\n\t\treturn errors.New("not a string")\n\t}\n\n\tcurrentValue := rtm.Value.Elem().String()\n\tnewValue := f.Transform(currentValue)\n\trtm.Value.Elem().SetString(newValue)\n\treturn nil\n}\n\nfunc (f *DirectiveCaseFormatter) Encode(rtm *httpin_core.DirectiveRuntime) error {\n\tif rtm.Value.Type().Kind() != reflect.String {\n\t\treturn errors.New("not a string")\n\t}\n\n\tcurrentValue := rtm.Value.String()\n\tnewValue := f.Transform(currentValue)\n\trtm.Value.SetString(newValue)\n\treturn nil\n}\n\nfunc init() {\n\thttpin_core.RegisterDirective("to_lowercase", &DirectiveCaseFormatter{\n\t\tTransform: strings.ToLower,\n\t})\n\n\thttpin_core.RegisterDirective("to_uppercase", &DirectiveCaseFormatter{\n\t\tTransform: strings.ToUpper,\n\t})\n}\n\ntype ListUsersInput struct {\n\tUsername string `in:"query=username;to_lowercase"`\n\tGender   string `in:"query=gender;to_uppercase"`\n}\n\nfunc ListUsersHandler(rw http.ResponseWriter, r *http.Request) {\n\tinput := r.Context().Value(httpin.Input).(*ListUsersInput)\n\tfmt.Printf("input: %#v\\n", input)\n}\n\nfunc main() {\n\trouter := chi.NewRouter()\n\n\t// Bind input struct with handler.\n\trouter.With(\n\t\thttpin.NewInput(ListUsersInput{}),\n\t).Get("/users", ListUsersHandler)\n\n\tr, _ := http.NewRequest("GET", "/users?username=Ggicci&gender=male", nil)\n\n\trw := httptest.NewRecorder()\n\trouter.ServeHTTP(rw, r)\n}\n'})})})]})}function p(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[611],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return h}});var r=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var c=r.createContext({}),s=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},u=function(t){var e=s(t.components);return r.createElement(c.Provider,{value:e},t.children)},l={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,o=t.originalType,c=t.parentName,u=p(t,["components","mdxType","originalType","parentName"]),d=s(n),h=i,f=d["".concat(c,".").concat(h)]||d[h]||l[h]||o;return n?r.createElement(f,a(a({ref:e},u),{},{components:n})):r.createElement(f,a({ref:e},u))}));function h(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=n.length,a=new Array(o);a[0]=d;var p={};for(var c in e)hasOwnProperty.call(e,c)&&(p[c]=e[c]);p.originalType=t,p.mdxType="string"==typeof t?t:i,a[1]=p;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5404:function(t,e,n){n.r(e),n.d(e,{assets:function(){return u},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return l}});var r=n(3117),i=n(102),o=(n(7294),n(3905)),a=["components"],p={sidebar_position:0},c="net/http",s={unversionedId:"integrations/http",id:"integrations/http",title:"net/http",description:"Package net/http",source:"@site/docs/integrations/http.md",sourceDirName:"integrations",slug:"/integrations/http",permalink:"/httpin/integrations/http",draft:!1,editUrl:"https://github.com/ggicci/httpin/edit/documentation/docs/docs/integrations/http.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"docsSidebar",previous:{title:"custom \ud83d\udd0c",permalink:"/httpin/directives/custom"},next:{title:"go-chi/chi",permalink:"/httpin/integrations/gochi"}},u={},l=[{value:"Chain httpin&#39;s Middlware to your http.Handler(s)",id:"chain-httpins-middlware-to-your-httphandlers",level:2}],d={toc:l};function h(t){var e=t.components,n=(0,i.Z)(t,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"nethttp"},"net/http"),(0,o.kt)("p",null,"Package ",(0,o.kt)("a",{parentName:"p",href:"https://pkg.go.dev/net/http#Handler"},"net/http")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"provides HTTP client and server implementations.")),(0,o.kt)("h2",{id:"chain-httpins-middlware-to-your-httphandlers"},"Chain httpin's Middlware to your http.Handler(s)"),(0,o.kt)("p",null,"We recommend using ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/justinas/alice"},"justinas/alice")," to chain your middlewares."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:"{4,10}","{4,10}":!0},'// Bind input vs. handler.\nfunc init() {\n    http.Handle("/users", alice.New(\n        httpin.NewInput(ListUsersInput{}),\n    ).ThenFunc(ListUsers))\n}\n\n// Get your input instance with only ONE LINE of code.\nfunc ListUsers(rw http.ResponseWriter, r *http.Request) {\n    input := r.Context().Value(httpin.Input).(*ListUsersInput)\n\n    // Do sth.\n}\n')))}h.isMDXComponent=!0}}]);
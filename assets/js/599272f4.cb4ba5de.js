"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[68],{3852:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>h,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var i=e(5893),s=e(1151),r=e(2332);const a={sidebar_position:0},o="net/http",c={id:"integrations/http",title:"net/http",description:"Package net/http",source:"@site/docs/integrations/http.mdx",sourceDirName:"integrations",slug:"/integrations/http",permalink:"/httpin/integrations/http",draft:!1,unlisted:!1,editUrl:"https://github.com/ggicci/httpin/edit/documentation/docs/docs/integrations/http.mdx",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"docsSidebar",previous:{title:"Custom \ud83d\udd0c",permalink:"/httpin/directives/custom"},next:{title:"go-chi/chi",permalink:"/httpin/integrations/gochi"}},h={},p=[{value:"Integrations",id:"integrations",level:2},{value:"Run Demo",id:"run-demo",level:2}];function d(t){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"nethttp",children:"net/http"}),"\n",(0,i.jsxs)(n.p,{children:["Package ",(0,i.jsx)(n.a,{href:"https://pkg.go.dev/net/http#Handler",children:"net/http"})]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"provides HTTP client and server implementations."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"integrations",children:"Integrations"}),"\n",(0,i.jsxs)(n.p,{children:["Chain httpin's Middlware to your ",(0,i.jsx)(n.code,{children:"http.Handler"}),"s. We recommend using ",(0,i.jsx)(n.a,{href:"https://github.com/justinas/alice",children:"justinas/alice"})," to chain your middlewares."]}),"\n",(0,i.jsx)(n.h2,{id:"run-demo",children:"Run Demo"}),"\n",(0,i.jsx)(r.Z,{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",metastring:"{20,27}",children:'package main\n\nimport (\n\t"fmt"\n\t"net/http"\n\t"net/http/httptest"\n\n\t"github.com/ggicci/httpin"\n\t"github.com/justinas/alice"\n)\n\ntype ListUsersInput struct {\n\tGender   string `in:"query=gender"`\n\tAgeRange []int  `in:"query=age_range"`\n\tIsMember bool   `in:"query=is_member"`\n}\n\nfunc ListUsers(rw http.ResponseWriter, r *http.Request) {\n\t// Retrieve you data in one line of code!\n\tinput := r.Context().Value(httpin.Input).(*ListUsersInput)\n\n\tfmt.Printf("input: %#v\\n", input)\n}\n\nfunc init() {\n\t// Bind input struct with handler.\n\thttp.Handle("/users", alice.New(\n\t\thttpin.NewInput(ListUsersInput{}),\n\t).ThenFunc(ListUsers))\n}\n\nfunc main() {\n\tr, _ := http.NewRequest("GET", "/users?gender=male&age_range=18&age_range=24&is_member=1", nil)\n\n\trw := httptest.NewRecorder()\n\thttp.DefaultServeMux.ServeHTTP(rw, r)\n}\n'})})})]})}function u(t={}){const{wrapper:n}={...(0,s.a)(),...t.components};return n?(0,i.jsx)(n,{...t,children:(0,i.jsx)(d,{...t})}):d(t)}}}]);
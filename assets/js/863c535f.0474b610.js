"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[717],{1972:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var n=i(5893),r=i(1151),s=i(4148);const d={inputOutput:{inputTitle:"Request",outputTitle:"Output",rows:[{input:"\nGET /users?access_token=abc&page=1\n  ",output:'\n&TokenInput{\n    Token: "abc",\n}\n'},{input:"\nGET /users?page=1\n  ",output:'\n// error occurred\n&InvalidFieldError{\n    Directive: "required",\n    Field: "access_token",\n    Key: "",\n    Value: nil,\n    ErrorMessage: "missing required field",\n}\n'}]}},o={sidebar_position:6},u="required",a={id:"directives/required",title:"required",description:'required is a directive executor who tags a field as required. The "required" here doesn\'t mean the final value after decoding must be non-zero, it means the key/field must be present in the input data. If you want to ensure the value not to be zero/empty, use nonzero instead.',source:"@site/docs/directives/required.mdx",sourceDirName:"directives",slug:"/directives/required",permalink:"/httpin/directives/required",draft:!1,unlisted:!1,editUrl:"https://github.com/ggicci/httpin/edit/documentation/docs/docs/directives/required.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"docsSidebar",previous:{title:"path",permalink:"/httpin/directives/path"},next:{title:"nonzero",permalink:"/httpin/directives/nonzero"}},c={},l=[{value:"Signature",id:"signature",level:2},{value:"Decoding",id:"decoding",level:2},{value:"Usage",id:"usage",level:3},{value:"Encoding",id:"encoding",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"required",children:"required"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"required"})," is a ",(0,n.jsx)(t.a,{href:"/advanced/concepts#directive-executor",children:"directive executor"}),' who tags a field as required. The "required" here ',(0,n.jsx)(t.strong,{children:"doesn't mean the final value after decoding must be non-zero"}),", it means ",(0,n.jsx)(t.strong,{children:"the key/field must be present in the input data"}),". If you want to ensure the value not to be zero/empty, use ",(0,n.jsx)(t.a,{href:"/directives/nonzero",children:"nonzero"})," instead."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"required"})," always works as an accompany with some other directives. How it works is that ",(0,n.jsx)(t.strong,{children:"it checks whether the field had been set by the former directives"}),". Which means if you use ",(0,n.jsx)(t.strong,{children:"required"}),' alone, or put it at the first place of the directives, it will always return an error "missing required field".']}),"\n",(0,n.jsx)(t.h2,{id:"signature",children:"Signature"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:'Name: "required"\nArgs: (no args)\n'})}),"\n",(0,n.jsx)(t.h2,{id:"decoding",children:"Decoding"}),"\n",(0,n.jsx)(t.p,{children:'When the field were not set by the former directives, an error "missing required field" will occur.'}),"\n",(0,n.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-go",children:'type TokenInput struct {\n\t// Make sure the access_token is present in the query string, we don\'t care about the value.\n\t// The value can be empty, e.g. `?access_token=`.\n\tToken string `in:"query=access_token;required"`\n}\n'})}),"\n",(0,n.jsx)(s.Z,{inputTitle:d.inputOutput.inputTitle,outputTitle:d.inputOutput.outputTitle,rows:d.inputOutput.rows}),"\n",(0,n.jsx)(t.h2,{id:"encoding",children:"Encoding"}),"\n",(0,n.jsx)(t.p,{children:"Useless."})]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},4148:(e,t,i)=>{i.d(t,{Z:()=>s});var n=i(6112),r=(i(7294),i(5893));const s=e=>(0,r.jsxs)("table",{children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:e.inputTitle||"Input"}),(0,r.jsx)("th",{children:e.outputTitle||"Output"})]})}),(0,r.jsx)("tbody",{children:e.rows.map(((e,t)=>(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)(n.Z,{children:e.input.trim()})}),(0,r.jsx)("td",{children:(0,r.jsx)(n.Z,{className:"language-go",children:e.output.trim()})})]},t)))})]})}}]);
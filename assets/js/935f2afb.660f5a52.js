"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Getting Started","href":"/httpin/","docId":"getting-started"},{"type":"category","label":"Directives","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"query","href":"/httpin/directives/query","docId":"directives/query"},{"type":"link","label":"header","href":"/httpin/directives/header","docId":"directives/header"},{"type":"link","label":"form","href":"/httpin/directives/form","docId":"directives/form"},{"type":"link","label":"body","href":"/httpin/directives/body","docId":"directives/body"},{"type":"link","label":"path","href":"/httpin/directives/path","docId":"directives/path"},{"type":"link","label":"required","href":"/httpin/directives/required","docId":"directives/required"},{"type":"link","label":"default","href":"/httpin/directives/default","docId":"directives/default"},{"type":"link","label":"decoder","href":"/httpin/directives/decoder","docId":"directives/decoder"},{"type":"link","label":"Create Your Own \ud83d\udd0c","href":"/httpin/directives/custom","docId":"directives/custom"}]},{"type":"category","label":"Integrations","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"net/http","href":"/httpin/integrations/http","docId":"integrations/http"},{"type":"link","label":"go-chi/chi","href":"/httpin/integrations/gochi","docId":"integrations/gochi"},{"type":"link","label":"gorilla/mux \ud83e\udd8d","href":"/httpin/integrations/gorilla","docId":"integrations/gorilla"},{"type":"link","label":"gin-gonic/gin \ud83e\udd64","href":"/httpin/integrations/gin","docId":"integrations/gin"},{"type":"link","label":"go-restful","href":"/httpin/integrations/go-restful","docId":"integrations/go-restful"}]},{"type":"category","label":"Advanced \ud83e\udd7d","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Concepts","href":"/httpin/advanced/concepts","docId":"advanced/concepts"},{"type":"link","label":"Error Handler","href":"/httpin/advanced/error-handler","docId":"advanced/error-handler"},{"type":"link","label":"Upload Files","href":"/httpin/advanced/upload-files","docId":"advanced/upload-files"},{"type":"link","label":"Patch Field","href":"/httpin/advanced/patch","docId":"advanced/patch"}]},{"type":"link","label":"API","href":"https://pkg.go.dev/github.com/ggicci/httpin"}]},"docs":{"advanced/concepts":{"id":"advanced/concepts","title":"Concepts","description":"httpin is driven by defining Go struct tags.","sidebar":"docsSidebar"},"advanced/error-handler":{"id":"advanced/error-handler","title":"Error Handler","description":"Introduced in v0.6.0.","sidebar":"docsSidebar"},"advanced/patch":{"id":"advanced/patch","title":"Patch Field","description":"Introduced in v0.12.0.","sidebar":"docsSidebar"},"advanced/upload-files":{"id":"advanced/upload-files","title":"Upload Files","description":"Introduced in v0.7.0.","sidebar":"docsSidebar"},"directives/body":{"id":"directives/body","title":"body","description":"body is a directive executor who decodes a field from the body of the request, i.e. http.Request.Body, JSON and XML formats are supported.","sidebar":"docsSidebar"},"directives/custom":{"id":"directives/custom","title":"Create Your Own \ud83d\udd0c","description":"You can extend httpin by adding your custom directives.","sidebar":"docsSidebar"},"directives/decoder":{"id":"directives/decoder","title":"decoder","description":"Introduced in v0.10.0.","sidebar":"docsSidebar"},"directives/default":{"id":"directives/default","title":"default","description":"Introduced in v0.8.0.","sidebar":"docsSidebar"},"directives/form":{"id":"directives/form","title":"form","description":"form is a directive executor who decodes a field from HTTP form data, i.e. http.Request.Form.","sidebar":"docsSidebar"},"directives/header":{"id":"directives/header","title":"header","description":"header is a directive executor who decodes a field from HTTP headers, i.e. http.Request.Header.","sidebar":"docsSidebar"},"directives/path":{"id":"directives/path","title":"path","description":"path is a directive executor who decodes a field from the path of the request URI, aka. path variables.","sidebar":"docsSidebar"},"directives/query":{"id":"directives/query","title":"query","description":"query is a directive executor who decodes a field from URL querystring parameters, i.e. http.Request.URL.Query().","sidebar":"docsSidebar"},"directives/required":{"id":"directives/required","title":"required","description":"required is a directive executor who tags a field as required.","sidebar":"docsSidebar"},"getting-started":{"id":"getting-started","title":"Getting Started","description":"httpin is a Go package for decoding HTTP requests into structs. We can decode","sidebar":"docsSidebar"},"integrations/gin":{"id":"integrations/gin","title":"gin-gonic/gin \ud83e\udd64","description":"Integrations","sidebar":"docsSidebar"},"integrations/go-restful":{"id":"integrations/go-restful","title":"go-restful","description":"go-restful is a","sidebar":"docsSidebar"},"integrations/gochi":{"id":"integrations/gochi","title":"go-chi/chi","description":"go-chi/chi is","sidebar":"docsSidebar"},"integrations/gorilla":{"id":"integrations/gorilla","title":"gorilla/mux \ud83e\udd8d","description":"gorilla/mux is","sidebar":"docsSidebar"},"integrations/http":{"id":"integrations/http","title":"net/http","description":"Package net/http","sidebar":"docsSidebar"}}}')}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[215],{5757:(e,t,n)=>{n.d(t,{Z:()=>r});const r={inputOutput:{inputTitle:"Request",outputTitle:"ListTasksQuery",rows:[{input:"\n  GET /tasks?page=4&perPage=10&state=failed&state=succeeded\n  ",output:'\n  {\n      Page:      4,\n      PerPage:   10,\n      StateList: []string{"failed", "succeeded"},\n  }'},{input:"\n  GET /tasks\n  ",output:'\n  {\n            Page:      1,\n            PerPage:   20,\n            StateList: []string{"pending", "running"},\n  }'}]}}},2332:(e,t,n)=>{n.d(t,{Z:()=>p});var r=function(e,t,n,r){return new(n||(n=Promise))((function(i,d){function s(e){try{o(r.next(e))}catch(t){d(t)}}function a(e){try{o(r.throw(e))}catch(t){d(t)}}function o(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}o((r=r.apply(e,t||[])).next())}))};class i{constructor(e="/goplay"){this.proxyUrl=e}raiseForStatus(e){return r(this,void 0,void 0,(function*(){if(!e.ok){const t=yield e.text();throw new Error(t?e.statusText+": "+t:e.statusText)}}))}compile(e,t){return r(this,void 0,void 0,(function*(){const n=new FormData;n.append("version","2"),n.append("withVet","true"),n.append("body",e);const r=yield fetch(`${this.proxyUrl}/_/compile?backend=${t||""}`,{method:"POST",body:n});return yield this.raiseForStatus(r),yield r.json()}))}renderCompile(e,t,n){return r(this,void 0,void 0,(function*(){e.replaceChildren(this.renderMessage("system","Waiting for remote server..."));const r=yield this.compile(t,n);if(e.replaceChildren(),""!=r.Errors)return e.appendChild(this.renderMessage("error",r.Errors)),void e.appendChild(this.renderMessage("system","\nGo build failed."));for(const t of r.Events||[])e.appendChild(yield this.renderEvent(t));e.appendChild(this.renderMessage("system","\nProgram exited."))}))}renderEvent(e){return r(this,void 0,void 0,(function*(){var t;return e.Delay>=0&&(yield(t=e.Delay/1e6,new Promise((e=>setTimeout(e,t))))),this.renderMessage(e.Kind,e.Message)}))}renderMessage(e,t){const n=document.createElement("span");return n.classList.add(e),n.innerText=t,n}share(e,t){return r(this,void 0,void 0,(function*(){const n=yield fetch(`${this.proxyUrl}/_/share`,{method:"POST",body:e});yield this.raiseForStatus(n);const r="https://go.dev/play/p/"+(yield n.text());return t?`${r}?v=${t}`:r}))}}var d=n(4464),s=n(7294);const a="toolbar_uIxz",o="button_yMrS",c="hidden_X41c",l="https://goplay.ggicci.me",u=e=>{const{children:t,onClick:n}=e;return s.createElement("button",{className:o,onClick:n},t)},p=e=>{const{children:t}=e,n=s.useRef(null),r=s.useRef(null),o=t&&t.props&&"pre"===t.props.mdxType&&t,p=o&&o.props&&o.props.children;if(!p||"code"!==p.props.mdxType)return s.createElement("div",null,"GoPlay: the wrapped data is not a codeblock.");if(!/\blanguage-go\b/.test(p&&p.props.className))return s.createElement("div",null,"GoPlay: only go code supported.");return s.createElement(s.Fragment,null,t,s.createElement("div",{ref:n,className:c},s.createElement(d.Z,{language:"text"},s.createElement("div",{ref:r}))),s.createElement("div",{className:a},s.createElement(u,{onClick:function(){if(r.current){const e=new i(l);n.current.classList.remove(c),e.renderCompile(r.current,p.props.children.trim())}}},"Run"),s.createElement(u,{onClick:async function(){const e=new i(l),t=await e.share(p.props.children.trim());window.open(t,"_blank")}},"Try it yourself \u21e2")))}},4148:(e,t,n)=>{n.d(t,{Z:()=>d});var r=n(4464),i=n(7294);const d=e=>i.createElement("table",null,i.createElement("thead",null,i.createElement("tr",null,i.createElement("th",null,e.inputTitle||"Input"),i.createElement("th",null,e.outputTitle||"Output"))),i.createElement("tbody",null,e.rows.map(((e,t)=>i.createElement("tr",{key:t},i.createElement("td",null,i.createElement(r.Z,null,e.input.trim())),i.createElement("td",null,i.createElement(r.Z,{className:"language-go"},e.output.trim())))))))},6267:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var r=n(7462),i=(n(7294),n(3905)),d=n(2332);n(4148),n(5757);const s={sidebar_position:8},a="decoder",o={unversionedId:"directives/decoder",id:"directives/decoder",title:"decoder",description:"Introduced in v0.10.0.",source:"@site/docs/directives/decoder.mdx",sourceDirName:"directives",slug:"/directives/decoder",permalink:"/httpin/directives/decoder",draft:!1,editUrl:"https://github.com/ggicci/httpin/edit/documentation/docs/docs/directives/decoder.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"docsSidebar",previous:{title:"default",permalink:"/httpin/directives/default"},next:{title:"Create Your Own \ud83d\udd0c",permalink:"/httpin/directives/custom"}},c={},l=[{value:"Definition",id:"definition",level:2},{value:"Usage",id:"usage",level:2},{value:"Run Example",id:"run-example",level:2}],u={toc:l},p="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"decoder"},"decoder"),(0,i.kt)("p",null,"Introduced in v0.10.0."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"decoder")," is a ",(0,i.kt)("strong",{parentName:"p"},"SPECIAL")," ",(0,i.kt)("a",{parentName:"p",href:"/advanced/concepts#directive-executor"},"directive executor"),"\nwho overrides the decoder used to decode the value of the corresponding field."),(0,i.kt)("h2",{id:"definition"},"Definition"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'Name: "decoder"\nArgs: DECODER_NAME\n')),(0,i.kt)("p",null,"When there's a ",(0,i.kt)("em",{parentName:"p"},"decoder")," directive defined for a field, the specified named decoder will be used rather than\nthe default one which is auto-selected by the type of the field."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go",metastring:"{7,14}","{7,14}":!0},'func decodeDate(value string) (interface{}, error) {\n    return time.Parse("2006-01-02", value)\n}\n\nfunc init() {\n    // Before using the decoder, you need to register it.\n    httpin.RegisterNamedDecoder("date", httpin.ValueTypeDecoderFunc(decodeDate))\n}\n\ntype ListUsersInput struct {\n    Gender string `in:"form=gender"`\n    // By default, the decoder is auto-selected by the field type, which is of `time.Time`.\n    // When decoder directive is set, the specified named decoder "date" will be used instead.\n    Birthday time.Time `in:"form=birthday;decoder=date"`\n}\n')),(0,i.kt)("h2",{id:"run-example"},"Run Example"),(0,i.kt)(d.Z,{mdxType:"GoPlay"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n    "net/http"\n    "net/http/httptest"\n    "time"\n\n    "github.com/ggicci/httpin"\n    "github.com/justinas/alice"\n)\n\nfunc init() {\n    httpin.RegisterNamedDecoder("date", httpin.ValueTypeDecoderFunc(decodeDate))\n}\n\nfunc decodeDate(value string) (interface{}, error) {\n    return time.Parse("2006-01-02", value)\n}\n\ntype ListUsersInput struct {\n    Gender string `in:"form=gender"`\n    // By default, the decoder is auto-selected by the field type, which is of `time.Time`.\n    // When decoder directive is set, the specified named decoder "date" will be used instead.\n    Birthday time.Time `in:"form=birthday;decoder=date"`\n}\n\nfunc ListUsers(rw http.ResponseWriter, r *http.Request) {\n    input := r.Context().Value(httpin.Input).(*ListUsersInput)\n    fmt.Printf("input: %#v\\n", input)\n}\n\nfunc main() {\n    mux := http.NewServeMux()\n    mux.Handle("/users", alice.New(\n        httpin.NewInput(ListUsersInput{}),\n    ).ThenFunc(ListUsers))\n\n    r, _ := http.NewRequest("GET", "/users?gender=male&birthday=1991-11-10", nil)\n    rw := httptest.NewRecorder()\n    mux.ServeHTTP(rw, r)\n}\n'))))}m.isMDXComponent=!0}}]);
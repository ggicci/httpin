"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[793],{2332:(e,t,n)=>{n.d(t,{Z:()=>p});var r=function(e,t,n,r){return new(n||(n=Promise))((function(i,o){function s(e){try{l(r.next(e))}catch(t){o(t)}}function a(e){try{l(r.throw(e))}catch(t){o(t)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}l((r=r.apply(e,t||[])).next())}))};class i{constructor(e="/goplay"){this.proxyUrl=e}raiseForStatus(e){return r(this,void 0,void 0,(function*(){if(!e.ok){const t=yield e.text();throw new Error(t?e.statusText+": "+t:e.statusText)}}))}compile(e,t){return r(this,void 0,void 0,(function*(){const n=new FormData;n.append("version","2"),n.append("withVet","true"),n.append("body",e);const r=yield fetch(`${this.proxyUrl}/_/compile?backend=${t||""}`,{method:"POST",body:n});return yield this.raiseForStatus(r),yield r.json()}))}renderCompile(e,t,n){return r(this,void 0,void 0,(function*(){e.replaceChildren(this.renderMessage("system","Waiting for remote server..."));const r=yield this.compile(t,n);if(e.replaceChildren(),""!=r.Errors)return e.appendChild(this.renderMessage("error",r.Errors)),void e.appendChild(this.renderMessage("system","\nGo build failed."));for(const t of r.Events||[])e.appendChild(yield this.renderEvent(t));e.appendChild(this.renderMessage("system","\nProgram exited."))}))}renderEvent(e){return r(this,void 0,void 0,(function*(){var t;return e.Delay>=0&&(yield(t=e.Delay/1e6,new Promise((e=>setTimeout(e,t))))),this.renderMessage(e.Kind,e.Message)}))}renderMessage(e,t){const n=document.createElement("span");return n.classList.add(e),n.innerText=t,n}share(e,t){return r(this,void 0,void 0,(function*(){const n=yield fetch(`${this.proxyUrl}/_/share`,{method:"POST",body:e});yield this.raiseForStatus(n);const r="https://go.dev/play/p/"+(yield n.text());return t?`${r}?v=${t}`:r}))}}var o=n(4464),s=n(7294);const a="toolbar_uIxz",l="button_yMrS",u="hidden_X41c",c="https://goplay.ggicci.me",d=e=>{const{children:t,onClick:n}=e;return s.createElement("button",{className:l,onClick:n},t)},p=e=>{const{children:t}=e,n=s.useRef(null),r=s.useRef(null),l=t&&t.props&&"pre"===t.props.mdxType&&t,p=l&&l.props&&l.props.children;if(!p||"code"!==p.props.mdxType)return s.createElement("div",null,"GoPlay: the wrapped data is not a codeblock.");if(!/\blanguage-go\b/.test(p&&p.props.className))return s.createElement("div",null,"GoPlay: only go code supported.");return s.createElement(s.Fragment,null,t,s.createElement("div",{ref:n,className:u},s.createElement(o.Z,{language:"text"},s.createElement("div",{ref:r}))),s.createElement("div",{className:a},s.createElement(d,{onClick:function(){if(r.current){const e=new i(c);n.current.classList.remove(u),e.renderCompile(r.current,p.props.children.trim())}}},"Run"),s.createElement(d,{onClick:async function(){const e=new i(c),t=await e.share(p.props.children.trim());window.open(t,"_blank")}},"Try it yourself \u21e2")))}},7129:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=n(7462),i=(n(7294),n(3905)),o=n(2332);const s={sidebar_position:2},a="gorilla/mux \ud83e\udd8d",l={unversionedId:"integrations/gorilla",id:"integrations/gorilla",title:"gorilla/mux \ud83e\udd8d",description:"gorilla/mux is",source:"@site/docs/integrations/gorilla.mdx",sourceDirName:"integrations",slug:"/integrations/gorilla",permalink:"/httpin/integrations/gorilla",draft:!1,editUrl:"https://github.com/ggicci/httpin/edit/documentation/docs/docs/integrations/gorilla.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"go-chi/chi",permalink:"/httpin/integrations/gochi"},next:{title:"gin-gonic/gin \ud83e\udd64",permalink:"/httpin/integrations/gin"}},u={},c=[{value:"Integrations",id:"integrations",level:2},{value:"Run Demo",id:"run-demo",level:2}],d={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"gorillamux-"},"gorilla/mux \ud83e\udd8d"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/gorilla/mux"},"gorilla/mux")," is"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"A powerful HTTP router and URL matcher for building Go web servers")),(0,i.kt)("h2",{id:"integrations"},"Integrations"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Enable ",(0,i.kt)("inlineCode",{parentName:"li"},"path")," directive by using ",(0,i.kt)("inlineCode",{parentName:"li"},"mux.Vars")," method")),(0,i.kt)("h2",{id:"run-demo"},"Run Demo"),(0,i.kt)(o.Z,{mdxType:"GoPlay"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go",metastring:"{21,29,36}","{21,29,36}":!0},'package main\n\nimport (\n    "fmt"\n    "net/http"\n    "net/http/httptest"\n\n    "github.com/ggicci/httpin"\n    "github.com/gorilla/mux"\n    "github.com/justinas/alice"\n)\n\ntype ListUserReposInput struct {\n    Username   string `in:"path=username"`\n    Visibility string `in:"query=visibility"`\n    Fork       bool   `in:"query=fork"`\n}\n\nfunc ListUserRepos(rw http.ResponseWriter, r *http.Request) {\n    // Retrieve you data in one line of code!\n    input := r.Context().Value(httpin.Input).(*ListUserReposInput)\n\n    fmt.Printf("input: %#v\\n", input)\n}\n\nfunc init() {\n    // Register a directive named "path" to retrieve values from `mux.Vars`,\n    // i.e. decode path variables.\n    httpin.UseGorillaMux("path", mux.Vars)\n}\n\nfunc main() {\n    router := mux.NewRouter()\n\n    // Bind input struct with handler.\n    router.Handle("/users/{username}/repos", alice.New(\n        httpin.NewInput(ListUserReposInput{}),\n    ).ThenFunc(ListUserRepos)).Methods("GET")\n\n    r, _ := http.NewRequest("GET", "/users/ggicci/repos?visibility=public&fork=1", nil)\n\n    rw := httptest.NewRecorder()\n    router.ServeHTTP(rw, r)\n}\n'))))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[525],{2191:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>g,frontMatter:()=>c,metadata:()=>l,toc:()=>p});var r=n(5893),i=n(1151),s=n(2332),u=n(4148);const a={inputOutput:{inputTitle:"Request (URL query)",outputTitle:"ListUsersInput",rows:[{input:"\nGET /users?is_member=1&age_range[]=3&age_range[]=5\n",output:"\n{\n    IsMember: true,\n    AgeRange: []int{3, 5},\n}"},{input:"\nGET /users?age_range=3&age_range=5\n",output:"\n{\n    IsMember: false,\n    AgeRange: []int{3, 5},\n}"},{input:"\nGET /users?is_member=true\n",output:"\n{\n    IsMember: true,\n    AgeRange: []int{},\n}\n"}]}},c={sidebar_position:1},d="query",l={id:"directives/query",title:"query",description:"query is a directive executor who decodes/encodes a field from/to URL querystring parameters, i.e. http.Request.URL.Query().",source:"@site/docs/directives/query.mdx",sourceDirName:"directives",slug:"/directives/query",permalink:"/httpin/directives/query",draft:!1,unlisted:!1,editUrl:"https://github.com/ggicci/httpin/edit/documentation/docs/docs/directives/query.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Getting Started",permalink:"/httpin/"},next:{title:"header",permalink:"/httpin/directives/header"}},o={},p=[{value:"Signature",id:"signature",level:2},{value:"Decoding",id:"decoding",level:2},{value:"Usage",id:"usage",level:3},{value:"Runable Example",id:"runable-example",level:3},{value:"Encoding",id:"encoding",level:2},{value:"Runable Example",id:"runable-example-1",level:3}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"query",children:"query"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"query"})," is a ",(0,r.jsx)(t.a,{href:"/advanced/concepts#directive-executor",children:"directive executor"})," who decodes/encodes a field from/to URL querystring parameters, i.e. ",(0,r.jsx)(t.a,{href:"https://pkg.go.dev/net/url#URL.Query",children:(0,r.jsx)(t.code,{children:"http.Request.URL.Query()"})}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"signature",children:"Signature"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:'Name: "query"\nArgs: KEY1 [,KEY2 [,KEY3, ...]]\n'})}),"\n",(0,r.jsx)(t.h2,{id:"decoding",children:"Decoding"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"query"})," will examine values of the keys one by one (KEY1 -> KEY2 -> ...) from the URL querystring, the ",(0,r.jsx)(t.strong,{children:"first non-empty"})," value will be used to set the corresponding field of the input struct."]}),"\n",(0,r.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:'type ListUsersInput struct {\n\tIsMember bool  `in:"query=is_member"`\n\tAgeRange []int `in:"query=age_range[],age_range"`\n}\n'})}),"\n",(0,r.jsx)(u.Z,{inputTitle:a.inputOutput.inputTitle,outputTitle:a.inputOutput.outputTitle,rows:a.inputOutput.rows}),"\n",(0,r.jsx)(t.h3,{id:"runable-example",children:"Runable Example"}),"\n",(0,r.jsx)(s.Z,{children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\t"net/http"\n\t"net/http/httptest"\n\n\t"github.com/ggicci/httpin"\n\t"github.com/go-chi/chi/v5"\n)\n\ntype ListUsersInput struct {\n\tIsMember bool  `in:"query=is_member"`\n\tAgeRange []int `in:"query=age_range[],age_range"`\n}\n\nfunc ListUsers(rw http.ResponseWriter, r *http.Request) {\n\tinput := r.Context().Value(httpin.Input).(*ListUsersInput)\n\tfmt.Printf("input: %#v\\n", input)\n}\n\nfunc main() {\n\trouter := chi.NewRouter()\n\trouter.With(\n\t\thttpin.NewInput(ListUsersInput{}),\n\t).Get("/users", ListUsers)\n\n\tr, _ := http.NewRequest("GET", "/users?is_member=1&age_range=18&age_range=60", nil)\n\n\trw := httptest.NewRecorder()\n\trouter.ServeHTTP(rw, r)\n}\n'})})}),"\n",(0,r.jsx)(t.p,{children:"Output:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:"input: &main.ListUsersInput{IsMember:true, AgeRange:[]int{18, 60}}\n"})}),"\n",(0,r.jsx)(t.h2,{id:"encoding",children:"Encoding"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"query"})," will encode the field to the first key, i.e. ",(0,r.jsx)(t.code,{children:"KEY1"}),", results in ",(0,r.jsx)(t.code,{children:"?KEY1=VALUE"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"runable-example-1",children:"Runable Example"}),"\n",(0,r.jsx)(s.Z,{children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\t"net/http/httputil"\n\n\t"github.com/ggicci/httpin"\n)\n\ntype ListUsersInput struct {\n\tIsMember bool  `in:"query=is_member"`\n\tAgeRange []int `in:"query=age_range[],age_range"`\n}\n\nfunc main() {\n\tinput := &ListUsersInput{\n\t\tIsMember: true,\n\t\tAgeRange: []int{18, 60},\n\t}\n\tr, _ := httpin.NewRequest("GET", "/users", input)\n\tdata, _ := httputil.DumpRequest(r, false)\n\tfmt.Printf("%s\\n", data)\n}\n'})})}),"\n",(0,r.jsx)(t.p,{children:"Output:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:"GET /users?age_range%5B%5D=18&age_range%5B%5D=60&is_member=true HTTP/1.1\n"})})]})}function g(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},4148:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(6112),i=(n(7294),n(5893));const s=e=>(0,i.jsxs)("table",{children:[(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:e.inputTitle||"Input"}),(0,i.jsx)("th",{children:e.outputTitle||"Output"})]})}),(0,i.jsx)("tbody",{children:e.rows.map(((e,t)=>(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)(r.Z,{children:e.input.trim()})}),(0,i.jsx)("td",{children:(0,i.jsx)(r.Z,{className:"language-go",children:e.output.trim()})})]},t)))})]})}}]);
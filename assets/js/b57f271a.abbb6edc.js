"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[525],{3152:function(e,t,n){n.d(t,{Z:function(){return g}});var r=n(4035),i=n(1720),u=n.n(i),a=n(9812),s=n(5670),o=n(7294),p="toolbar_uIxz",l="button_yMrS",c="hidden_X41c",m="https://goplay.ggicci.me",d=function(e){var t=e.children,n=e.onClick;return o.createElement("button",{className:l,onClick:n},t)},g=function(e){var t=e.children,n=o.useRef(null),i=o.useRef(null),l=t&&t.props&&"pre"===t.props.mdxType&&t,g=l&&l.props&&l.props.children;if(!g||"code"!==g.props.mdxType)return o.createElement("div",null,"GoPlay: the wrapped data is not a codeblock.");if(!/\blanguage-go\b/.test(g&&g.props.className))return o.createElement("div",null,"GoPlay: only go code supported.");function h(){return(h=(0,r.Z)(u().mark((function e(){var t,n;return u().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=new a.h(m),e.next=3,t.share(g.props.children.trim());case 3:n=e.sent,window.open(n,"_blank");case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}return o.createElement(o.Fragment,null,t,o.createElement("div",{ref:n,className:c},o.createElement(s.Z,{language:"text"},o.createElement("div",{ref:i}))),o.createElement("div",{className:p},o.createElement(d,{onClick:function(){if(i.current){var e=new a.h(m);n.current.classList.remove(c),e.renderCompile(i.current,g.props.children.trim())}}},"Run"),o.createElement(d,{onClick:function(){return h.apply(this,arguments)}},"Try it yourself \u21e2")))}},4148:function(e,t,n){var r=n(5670),i=n(7294);t.Z=function(e){return i.createElement("table",null,i.createElement("thead",null,i.createElement("tr",null,i.createElement("th",null,e.inputTitle||"Input"),i.createElement("th",null,e.outputTitle||"Output"))),i.createElement("tbody",null,e.rows.map((function(e,t){return i.createElement("tr",{key:t},i.createElement("td",null,i.createElement(r.Z,null,e.input.trim())),i.createElement("td",null,i.createElement(r.Z,{className:"language-go"},e.output.trim())))}))))}},6791:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return l},metadata:function(){return m},toc:function(){return g}});var r=n(3117),i=n(102),u=(n(7294),n(3905)),a=n(3152),s=n(4148),o={inputOutput:{inputTitle:"Request (URL query)",outputTitle:"ListUsersInput",rows:[{input:"\nGET /users?is_member=1&age_range[]=3&age_range[]=5\n",output:"\n{\n    IsMember: true,\n    AgeRange: []int{3, 5},\n}"},{input:"\nGET /users?age_range=3&age_range=5\n",output:"\n{\n    IsMember: false,\n    AgeRange: []int{3, 5},\n}"},{input:"\nGET /users?is_member=true\n",output:"\n{\n    IsMember: true,\n    AgeRange: []int{},\n}\n"}]}},p=["components"],l={sidebar_position:1},c="query",m={unversionedId:"directives/query",id:"directives/query",title:"query",description:"query is a directive executor who decodes a field from URL querystring parameters, i.e. http.Request.URL.Query().",source:"@site/docs/directives/query.mdx",sourceDirName:"directives",slug:"/directives/query",permalink:"/httpin/directives/query",draft:!1,editUrl:"https://github.com/ggicci/httpin/edit/documentation/docs/docs/directives/query.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Getting Started",permalink:"/httpin/"},next:{title:"header",permalink:"/httpin/directives/header"}},d={},g=[{value:"Definition",id:"definition",level:2},{value:"Usage",id:"usage",level:2},{value:"Run Demo",id:"run-demo",level:2}],h={toc:g};function f(e){var t=e.components,n=(0,i.Z)(e,p);return(0,u.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,u.kt)("h1",{id:"query"},"query"),(0,u.kt)("p",null,(0,u.kt)("strong",{parentName:"p"},"query")," is a ",(0,u.kt)("a",{parentName:"p",href:"/advanced/concepts#directive-executor"},"directive executor")," who decodes a field from URL querystring parameters, i.e. ",(0,u.kt)("a",{parentName:"p",href:"https://pkg.go.dev/net/url#URL.Query"},(0,u.kt)("inlineCode",{parentName:"a"},"http.Request.URL.Query()")),"."),(0,u.kt)("h2",{id:"definition"},"Definition"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-yaml"},'Name: "query"\nArgs: KEY1 [,KEY2 [,KEY3, ...]]\n')),(0,u.kt)("p",null,(0,u.kt)("strong",{parentName:"p"},"query")," will examine values of the keys one by one (KEY1 -> KEY2 -> ...) from the URL query, the ",(0,u.kt)("strong",{parentName:"p"},"first non-empty")," value will be used to set the corresponding field of the input struct."),(0,u.kt)("h2",{id:"usage"},"Usage"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-go"},'type ListUsersInput struct {\n    IsMember bool  `in:"query=is_member"`\n    AgeRange []int `in:"query=age_range[],age_range"`\n}\n')),(0,u.kt)(s.Z,{inputTitle:o.inputOutput.inputTitle,outputTitle:o.inputOutput.outputTitle,rows:o.inputOutput.rows,mdxType:"InputOutputTable"}),(0,u.kt)("h2",{id:"run-demo"},"Run Demo"),(0,u.kt)(a.Z,{mdxType:"GoPlay"},(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n    "net/http"\n    "net/http/httptest"\n\n    "github.com/ggicci/httpin"\n    "github.com/go-chi/chi/v5"\n)\n\ntype ListUsersInput struct {\n    IsMember bool  `in:"query=is_member"`\n    AgeRange []int `in:"query=age_range[],age_range"`\n}\n\nfunc ListUsers(rw http.ResponseWriter, r *http.Request) {\n    input := r.Context().Value(httpin.Input).(*ListUsersInput)\n    fmt.Printf("input: %#v\\n", input)\n}\n\nfunc main() {\n    router := chi.NewRouter()\n    router.With(\n        httpin.NewInput(ListUsersInput{}),\n    ).Get("/users", ListUsers)\n\n    r, _ := http.NewRequest("GET", "/users?is_member=1&age_range=18&age_range=60", nil)\n\n    rw := httptest.NewRecorder()\n    router.ServeHTTP(rw, r)\n}\n'))))}f.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[396],{3152:function(e,t,n){n.d(t,{Z:function(){return h}});var r=n(4035),o=n(1720),a=n.n(o),i=n(9812),s=n(5670),d=n(7294),p="toolbar_uIxz",l="button_yMrS",u="hidden_X41c",c="https://goplay.ggicci.me",m=function(e){var t=e.children,n=e.onClick;return d.createElement("button",{className:l,onClick:n},t)},h=function(e){var t=e.children,n=d.useRef(null),o=d.useRef(null),l=t&&t.props&&"pre"===t.props.mdxType&&t,h=l&&l.props&&l.props.children;if(!h||"code"!==h.props.mdxType)return d.createElement("div",null,"GoPlay: the wrapped data is not a codeblock.");if(!/\blanguage-go\b/.test(h&&h.props.className))return d.createElement("div",null,"GoPlay: only go code supported.");function g(){return(g=(0,r.Z)(a().mark((function e(){var t,n;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=new i.h(c),e.next=3,t.share(h.props.children.trim());case 3:n=e.sent,window.open(n,"_blank");case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}return d.createElement(d.Fragment,null,t,d.createElement("div",{ref:n,className:u},d.createElement(s.Z,{language:"text"},d.createElement("div",{ref:o}))),d.createElement("div",{className:p},d.createElement(m,{onClick:function(){if(o.current){var e=new i.h(c);n.current.classList.remove(u),e.renderCompile(o.current,h.props.children.trim())}}},"Run"),d.createElement(m,{onClick:function(){return g.apply(this,arguments)}},"Try it yourself \u21e2")))}},4148:function(e,t,n){var r=n(5670),o=n(7294);t.Z=function(e){return o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",null,e.inputTitle||"Input"),o.createElement("th",null,e.outputTitle||"Output"))),o.createElement("tbody",null,e.rows.map((function(e,t){return o.createElement("tr",{key:t},o.createElement("td",null,o.createElement(r.Z,null,e.input.trim())),o.createElement("td",null,o.createElement(r.Z,{className:"language-go"},e.output.trim())))}))))}},1090:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return u},default:function(){return y},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return h}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),i=n(3152),s=n(4148),d={inputOutput:{inputTitle:"Request (Body)",outputTitle:"CreateUserInput",rows:[{input:'\nPOST /users HTTP/1.1\nHost: foo.example\nContent-Type: application/json\n\n{ "login": "alex", "gender": "female" }\n  ',output:'\nPayload: &User{\n    Login: "alex",\n    Gender: "female",\n}\n'}]}},p=["components"],l={sidebar_position:4},u="body",c={unversionedId:"directives/body",id:"directives/body",title:"body",description:"body is a directive executor who decodes a field from the body of the request, i.e. http.Request.Body, JSON and XML formats are supported.",source:"@site/docs/directives/body.mdx",sourceDirName:"directives",slug:"/directives/body",permalink:"/httpin/directives/body",draft:!1,editUrl:"https://github.com/ggicci/httpin/edit/documentation/docs/docs/directives/body.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"form",permalink:"/httpin/directives/form"},next:{title:"path",permalink:"/httpin/directives/path"}},m={},h=[{value:"Definition",id:"definition",level:2},{value:"Usage",id:"usage",level:2},{value:"Body Annotations",id:"body-annotations",level:2},{value:"Custom Body Decoders",id:"custom-body-decoders",level:2}],g={toc:h};function y(e){var t=e.components,n=(0,o.Z)(e,p);return(0,a.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"body"},"body"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"body")," is a ",(0,a.kt)("a",{parentName:"p",href:"/advanced/concepts#directive-executor"},"directive executor")," who decodes a field from the body of the request, i.e. ",(0,a.kt)("a",{parentName:"p",href:"https://pkg.go.dev/net/http#Request"},(0,a.kt)("inlineCode",{parentName:"a"},"http.Request.Body")),", ",(0,a.kt)("strong",{parentName:"p"},"JSON")," and ",(0,a.kt)("strong",{parentName:"p"},"XML")," formats are supported."),(0,a.kt)("h2",{id:"definition"},"Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'Name: "body"\nArgs: BODY_TYPE\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"body")," will read the content of the request body and parses it as ",(0,a.kt)("inlineCode",{parentName:"p"},"BODY_TYPE")," into the corresponding field of the struct. Supported BODY_TYPE are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"json"),": parses the body as an JSON object"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"xml"),": parses the body as an XML object")),(0,a.kt)("p",null,"If BODY_TYPE were not specified, ",(0,a.kt)("inlineCode",{parentName:"p"},"json")," will be used."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'type User struct {\n    Login  string `json:"login"`\n    Gender string `json:"gender"`\n}\n\ntype CreateUserInput struct {\n    Payload *User `in:"body=json"` // use "body=xml" for XML formatted body\n}\n')),(0,a.kt)(s.Z,{inputTitle:d.inputOutput.inputTitle,outputTitle:d.inputOutput.outputTitle,rows:d.inputOutput.rows,mdxType:"InputOutputTable"}),(0,a.kt)(i.Z,{mdxType:"GoPlay"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n    "io"\n    "net/http"\n    "net/http/httptest"\n    "strings"\n\n    "github.com/ggicci/httpin"\n    "github.com/go-chi/chi/v5"\n)\n\ntype UpdateUserInput struct {\n    ID      string `in:"path=id"` // NOTE: register a path directive before using\n    Payload struct {\n        Display string `json:"display"`\n        Email   string `json:"email"`\n        IsAdmin bool   `json:"is_admin"`\n    } `in:"body=json"`\n}\n\nfunc UpdateUserHandler(rw http.ResponseWriter, r *http.Request) {\n    input := r.Context().Value(httpin.Input).(*UpdateUserInput)\n    fmt.Printf("input: %#v\\n", input)\n}\n\nfunc init() {\n    httpin.UseGochiURLParam("path", chi.URLParam)\n}\n\nfunc main() {\n    router := chi.NewRouter()\n    router.With(\n        httpin.NewInput(UpdateUserInput{}),\n    ).Put("/users/{id}", UpdateUserHandler)\n\n    r, _ := http.NewRequest("PUT", "/users/19911110", nil)\n    r.Body = io.NopCloser(strings.NewReader(`{\n            "display": "Ggicci Never Cry",\n            "email": "secret_@xxx.com",\n            "is_admin": true\n        }`))\n\n    rw := httptest.NewRecorder()\n    router.ServeHTTP(rw, r)\n}\n'))),(0,a.kt)("h2",{id:"body-annotations"},"Body Annotations"),(0,a.kt)("p",null,"There're two ",(0,a.kt)("em",{parentName:"p"},"body decoder annotations")," that can be used to read the body of the request:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"httpin.JSONBody"),": parses the body as an JSON object"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"httpin.XMLBody"),": parses the body as an XML object")),(0,a.kt)("p",null,"You can embed one of them into your struct like the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'type CreateUserInput struct {\n    httpin.JSONBody\n    Login  string `json:"login"`\n    Gender string `json:"gender"`\n}\n')),(0,a.kt)("p",null,"or"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'type User struct {\n    Login  string `json:"login"`\n    Gender string `json:"gender"`\n}\n\ntype CreateUserInput struct {\n    httpin.JSONBody\n    *User\n}\n')),(0,a.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},(0,a.kt)("strong",{parentName:"p"},"Body Annotations")," turns the whole struct into a target to which the request body\nwill be decoded and populated. So it doesn't support a mix of body input and\nparam input. Instead, embedding a struct into the input struct can achieve this.\nCheck the demo code above."))),(0,a.kt)("h2",{id:"custom-body-decoders"},"Custom Body Decoders"),(0,a.kt)("p",null,"Use one of the following methods to add/replace a new body decoder to ",(0,a.kt)("strong",{parentName:"p"},"httpin"),"."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"https://pkg.go.dev/github.com/ggicci/httpin#RegisterBodyDecoder"},(0,a.kt)("inlineCode",{parentName:"a"},"RegisterBodyDecoder"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"https://pkg.go.dev/github.com/ggicci/httpin#ReplaceBodyDecoder"},(0,a.kt)("inlineCode",{parentName:"a"},"ReplaceBodyDecoder")))),(0,a.kt)("p",null,"For example, the default JSON decoder is borrowed from Go's standard ",(0,a.kt)("a",{parentName:"p",href:"https://pkg.go.dev/encoding/json"},(0,a.kt)("inlineCode",{parentName:"a"},"encoding/json"))," package.\nIf you want to use a different JSON decoder, you can replace it by using the following code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'func init() {\n    httpin.ReplaceBodyDecoder("json", &myJSONDecoder{})\n}\n')),(0,a.kt)("p",null,"You also can register a new body decoder by using the following code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'func init() {\n    httpin.RegisterBodyDecoder("yaml", &myYAMLDecoder{})\n    // OR\n    httpin.ReplaceBodyDecoder("yaml", &myYAMLDecoder{})\n}\n')))}y.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[937],{4081:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>r});var t=i(5893),s=i(1151);const a={sidebar_position:4},d="Patch Field",c={id:"advanced/patch",title:"Patch Field",description:"Introduced in v0.12.0.",source:"@site/docs/advanced/patch.md",sourceDirName:"advanced",slug:"/advanced/patch",permalink:"/httpin/advanced/patch",draft:!1,unlisted:!1,editUrl:"https://github.com/ggicci/httpin/edit/documentation/docs/docs/advanced/patch.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"File Uploads",permalink:"/httpin/advanced/upload-files"}},l={},r=[{value:"JSON Payload Request",id:"json-payload-request",level:2},{value:"Form Request",id:"form-request",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"patch-field",children:"Patch Field"}),"\n",(0,t.jsx)(n.p,{children:"Introduced in v0.12.0."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'import "github.com/ggicci/httpin/patch"\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://pkg.go.dev/github.com/ggicci/httpin/patch#Field",children:(0,t.jsx)(n.code,{children:"patch.Field"})})," is a generic struct:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:"type Field[T any] struct {\n\tValue T\n\tValid bool\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["It takes in a type parameter as the type of the actual value it holds, and wraps in a ",(0,t.jsx)(n.code,{children:"Valid"})," field as a sentinel, which is used to ",(0,t.jsx)(n.strong,{children:'tell "the field is missing" from "the field is empty"'}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"patch.Field[T]"})," as the type of a field."]}),"\n",(0,t.jsx)(n.h2,{id:"json-payload-request",children:"JSON Payload Request"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'import "github.com/ggicci/httpin/patch"\n\ntype AccountPatchPayload struct {\n\tUsername patch.Field[string]\n\tGender   patch.Field[string]\n\tAge      patch.Field[int]\n}\n\nfunc PatchAccount(rw http.ResponseWriter, r *http.Request) {\n\tvar payload AccountPatchPayload\n\tjson.NewDecoder(r.Body).Decode(&payload)\n\n\tif !payload.Username.Valid {\n\t\t// field "Username" is missing (not found or null)\n\t}\n}\n'})}),"\n",(0,t.jsxs)(n.admonition,{type:"caution",children:[(0,t.jsx)(n.p,{children:"In this package, and in a JSON object, a field is defined as a missing field when:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"if the name/key of the field is not found in the JSON object"}),"\n",(0,t.jsx)(n.li,{children:"or the name/key of the field is present but its value is null, null is interpreted as having no value"}),"\n"]})]}),"\n",(0,t.jsx)(n.p,{children:"For example, in the following two JSON objects, field Name is missing:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{ "Age": 18 }\n{ "Name": null, "Age": 18 }\n'})}),"\n",(0,t.jsx)(n.h2,{id:"form-request",children:"Form Request"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'import "github.com/ggicci/httpin/patch"\n\ntype AccountPatchForm struct {\n\tUsername patch.Field[string] `in:"form=username"`\n\tGender   patch.Field[string] `in:"form=gender"`\n\tAge      patch.Field[int]    `in:"form=age"`\n}\n\nfunc PatchAccount(rw http.ResponseWriter, r *http.Request) {\n    payload := r.Context().Value(httpin.Input).(*AccountPatchForm)\n\n\tif !payload.Username.Valid {\n\t\t// field "Username" is missing (not found or null)\n\t}\n}\n'})}),"\n",(0,t.jsxs)(n.admonition,{type:"caution",children:[(0,t.jsx)(n.p,{children:"In this package, in a querystring, form or multipart-form request, a field is defined as a missing field when:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"the name/key of the field doesn't appear in the request"}),"\n"]})]}),"\n",(0,t.jsxs)(n.p,{children:["For example, in the following request, ",(0,t.jsx)(n.code,{children:"gender"})," field is empty but not missing (i.e. ",(0,t.jsx)(n.code,{children:"Gender.Valid == true"}),"), while ",(0,t.jsx)(n.code,{children:"age"})," field is missing (i.e. ",(0,t.jsx)(n.code,{children:"Age.Valid == false"}),"):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"GET /tasks?username=ggicci&gender=\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);